# Generated by Django 5.0.2 on 2025-06-02 02:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message='El teléfono debe tener entre 7 y 15 dígitos y puede iniciar con +', regex='^\\+?\\d{7,15}$')], verbose_name='Teléfono')),
                ('user_type', models.CharField(choices=[('client', 'Cliente'), ('operator', 'Operador'), ('admin', 'Administrador')], db_index=True, default='client', max_length=10, verbose_name='Tipo de Usuario')),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Foto de Perfil')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=100, verbose_name='Nombre de Empresa')),
                ('tax_id', models.CharField(blank=True, max_length=20, verbose_name='RFC/CURP')),
                ('preferred_delivery_time', models.CharField(blank=True, max_length=50, verbose_name='Horario Preferido')),
                ('special_instructions', models.TextField(blank=True, verbose_name='Instrucciones Especiales')),
                ('total_orders', models.PositiveIntegerField(default=0, verbose_name='Total de Pedidos')),
                ('total_liters', models.FloatField(default=0, verbose_name='Total de Litros')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'client'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Cliente',
                'verbose_name_plural': 'Perfiles de Clientes',
            },
        ),
        migrations.CreateModel(
            name='OperatorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=20, verbose_name='Número de Licencia')),
                ('license_expiry', models.DateField(verbose_name='Vencimiento de Licencia')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('hire_date', models.DateField(verbose_name='Fecha de Contratación')),
                ('total_deliveries', models.PositiveIntegerField(default=0, verbose_name='Total de Entregas')),
                ('average_rating', models.FloatField(default=0, verbose_name='Calificación Promedio')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name='Contacto de Emergencia')),
                ('emergency_contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message='El teléfono debe tener entre 7 y 15 dígitos y puede iniciar con +', regex='^\\+?\\d{7,15}$')], verbose_name='Teléfono de Emergencia')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'operator'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Perfil de Operador',
                'verbose_name_plural': 'Perfiles de Operadores',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type', 'is_active'], name='users_user_user_ty_92c6d9_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('username',), name='unique_username'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email'),
        ),
    ]
