./django_project/urls.py:126:    # Nueva app de unidades (reemplaza a vehicles)
./django_project/settings.py:61:    "apps.vehicles",
./.pythonlibs/lib/python3.10/site-packages/faker/proxy.pyi:3285:           Cars, SUVs, vans, trucks, and other 4-wheeled civilian vehicles are
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/ar_JO/__init__.py:34:                "42",  # Light goods vehicles
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/ar_PS/__init__.py:13:        # Private vehicles
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/ar_PS/__init__.py:20:        # Authority vehicles
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/ar_PS/__init__.py:22:        # New police vehicles
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/ar_PS/__init__.py:37:        # Governmental, and Governmental personal vehicles
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/en_PH/__init__.py:13:    refers to either a machine's motor or a motorcycle, "vehicles" usually means
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/en_PH/__init__.py:58:           Cars, SUVs, vans, trucks, and other 4-wheeled civilian vehicles are
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/nl_NL/__init__.py:21:    # License formats for cars / other vehicles than motorbikes
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/nl_NL/__init__.py:36:    # According to CBS, approximately 10% of road vehicles in the Netherlands are motorbikes
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/ru_RU/__init__.py:280:        # Diplomatic vehicles
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/sv_SE/__init__.py:10:    - https://www.transportstyrelsen.se/en/road/Vehicles/license-plates/
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/zh_CN/__init__.py:7:    electric vehicles or downtown-restricted plates are not included
./.pythonlibs/lib/python3.10/site-packages/faker/providers/automotive/zh_TW/__init__.py:15:        # Commercial vehicles since 2012
./.git/logs/HEAD:13:be06951dd68ae159047ab064f8da5c922467eb39 a41d49c90e00224d957a81e97b918132c75bacb3 Seidai Xibalbi <37512761-thepeacefulgift@users.noreply.replit.com> 1752515029 +0000	commit: backup antes de eliminar app vehicles
./.git/logs/refs/heads/q2-dev:12:be06951dd68ae159047ab064f8da5c922467eb39 a41d49c90e00224d957a81e97b918132c75bacb3 Seidai Xibalbi <37512761-thepeacefulgift@users.noreply.replit.com> 1752515029 +0000	commit: backup antes de eliminar app vehicles
./.git/COMMIT_EDITMSG:1:backup antes de eliminar app vehicles
./apps/orders/migrations/0002_initial.py:14:        ('vehicles', '0001_initial'),
./apps/orders/migrations/0002_initial.py:32:            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vehicles.vehicle'),
./apps/orders/migrations/0004_order_colonia_order_zone_and_more.py:11:        ('vehicles', '0001_initial'),
./apps/orders/management/commands/generate_test_orders.py:24:from apps.vehicles.models import Vehicle
./apps/orders/models.py:119:        "vehicles.Vehicle",
./apps/orders/views_operator.py:24:from apps.vehicles.models import Vehicle
./apps/vehicles/migrations/0001_initial.py:39:                ('assigned_operator', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'operator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_vehicles', to=settings.AUTH_USER_MODEL, verbose_name='Operador Asignado')),
./apps/vehicles/migrations/0001_initial.py:45:                'indexes': [models.Index(fields=['status', 'vehicle_type'], name='vehicles_ve_status_6732a2_idx'), models.Index(fields=['assigned_operator'], name='vehicles_ve_assigne_94ed20_idx')],
./apps/vehicles/migrations/0002_alter_vehicle_vehicle_type.py:9:        ('vehicles', '0001_initial'),
./apps/vehicles/migrations/0003_alter_vehicle_options_and_more.py:11:        ('vehicles', '0002_alter_vehicle_vehicle_type'),
./apps/vehicles/migrations/0003_alter_vehicle_options_and_more.py:30:            name='vehicles_ve_status_6732a2_idx',
./apps/vehicles/migrations/0003_alter_vehicle_options_and_more.py:34:            name='vehicles_ve_assigne_94ed20_idx',
./apps/vehicles/migrations/0004_alter_vehicle_capacity_litres_and_more.py:9:        ('vehicles', '0003_alter_vehicle_options_and_more'),
./apps/vehicles/apps.py:4:class VehiclesConfig(AppConfig):
./apps/vehicles/apps.py:6:    name = 'apps.vehicles'
./apps/vehicles/urls.py:1:# apps/vehicles/urls.py
./apps/vehicles/urls.py:3:app_name = "vehicles"
./apps/vehicles/admin.py:1:# apps/vehicles/admin.py
./apps/vehicles/models.py:1:# apps/vehicles/models.py
./docs/adr/ADR-0005.md:34:   python manage.py makemigrations vehicles
./docs/adr/ADR-0006.md:8:Orders y Vehicles referencian `settings.AUTH_USER_MODEL` con
./docs/adr/ADR-0007.md:9:formularios y modelos dependientes (Orders, Vehicles) necesitaban un
./verificador-automatico.py:70:    apps = ['users', 'orders', 'vehicles', 'payments', 'core']
./verificador-automatico.py:198:        print("  mkdir -p apps/users apps/orders apps/vehicles apps/payments apps/core")
./verificador-automatico.py:201:        print("  touch apps/vehicles/__init__.py apps/payments/__init__.py")
./attached_assets/Pasted-Dime-cu-les-son-las-apps-que-tenemos-ahorita-F-jate-que-necesitamos-hacer-esto-Quiero-que-me-dig-1751344517051_1751344517055.txt:56:Asigna operator=request.user y vehicle=request.user.assigned_vehicles.first().
./tests/test_operator_flow.py:9:    """Seed 3 operators, 3 clients, their vehicles y 3 pedidos."""
./tests/test_operator_flow.py:34:    from apps.vehicles.models import Vehicle
./NOTAS.txt:243:    python manage.py makemigrations vehicles
./NOTAS.txt:249:• vehicles.0002 applied – estructura de Vehicle sincronizada.
